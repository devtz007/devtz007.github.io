//_mixin_reusable.scss
@use "./mixin_flex_lb.module" as mif;

// Gradient text mixin
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text; // Firefox
}

// claymorphism
@mixin claymorphism-type-1($bgColor: green) {
  backdrop-filter: blur(5px);
  box-shadow: inset -8px -8px 16px 0 rgb(var($bgColor), 0.15),
    inset 0 11px 28px 0 rgb(var($bgColor));
}

// Light neon effect mixin
@mixin neon-light($color) {
  text-shadow: 0 0 2px rgba($color, 0.4), 0 0 4px rgba($color, 0.3),
    0 0 6px rgba($color, 0.2), 0 0 10px rgba($color, 0.1);
}

// neon flicker
@mixin neon-flicker($name: neon-flicker, $duration: 1.5s, $intensity: 0.6) {
  @keyframes #{$name} {
    0%,
    18%,
    22%,
    25%,
    53%,
    57%,
    100% {
      opacity: 1;
    }
    20%,
    24%,
    55% {
      opacity: $intensity;
    }
  }

  animation: #{$name} $duration infinite alternate;
}

// buttons
@mixin btn-type-1(
  $text-color: #25d366,
  $border-color: #25d366,
  $bg-color: transparent,
  $hover-bg-color: #88d958,
  $hover-color: white,
  $gradient-start: #25d366,
  $gradient-mid: #88d958,
  $gradient-end: #25d366,
  $use-gradient: true
) {
  position: relative;
  overflow: hidden;
  @include mif.flex-row-jc-ac;
  gap: 10px;
  font-size: 1.1rem;
  padding: 10px 22px;
  text-align: center;
  border-radius: 8px;
  border: 1px solid $border-color;
  background: $bg-color;
  color: $text-color;
  z-index: 0; // base button z-index
  will-change: transform, color; // smoother animation for hover

  /* Make content above the pseudo-element */
  > * {
    position: relative;
    z-index: 1;
    transition: color 0.3s ease-in-out;
  }

  transition: transform 0.3s ease-in-out; // smooth lift
  @media (width <= 768px) {
    font-size: 1em;
  }
  @media (width <= 520px) {
    padding: 8px 20px;
  }
  @media (width <= 320px) {
    font-size: 0.9em;
    padding: 6px 18px;
  }

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    @if $use-gradient {
      background: linear-gradient(
        100deg,
        $gradient-start 0%,
        $gradient-mid 50%,
        $gradient-end 100%
      );
    } @else {
      background: $hover-bg-color;
    }
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    z-index: 0; // behind text
    will-change: opacity;
  }

  span {
    @include mif.flex-row-ac;
    gap: 5px;
  }

  &:hover {
    > * {
      color: $hover-color; // smoothly change text/icon color
    }

    &::before {
      opacity: 1; // smoothly show gradient/background
    }
  }
}

// image content
@mixin image-content-type-1($objectFit: contain, $objectPosition: center) {
  @include mif.flex-jc-ac;

  img {
    width: 100%;
    height: 100%;
    object-fit: $objectFit;
    object-position: $objectPosition;
  }
}
